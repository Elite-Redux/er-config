syntax = "proto3";

package er;

import "MoveEnum.proto";
import "MoveEffect.proto";
import "Types.proto";
import "BattleMoveEffect.proto";

option java_package = "er.proto";
option java_multiple_files = true;

message MoveList {
  repeated Move moves = 1;
}

enum MoveTarget {
  SELECTED = 0x0;
  DEPENDS = 0x1;
  USER_OR_SELECTED = 0x2;
  RANDOM = 0x4;
  BOTH = 0x8;
  USER = 0x10;
  FOES_AND_ALLY = 0x20;
  OPPONENTS_FIELD = 0x40;
  ALLY = 0x80;
  USER_OR_ALLY = 0x90;
  ALL_BATTLERS = 0x110;
}

enum MoveSplit {
  PHYSICAL = 0;
  SPECIAL = 1;
  STATUS = 2;
}

message MoveEffectArgument {
  BattleMoveEffect effect = 1;
  bool affects_user = 2;
  bool certain = 3;
}

enum Status {
  STATUS1_NONE = 0;
  SLEEP = 1;
  POISON = 2;
  BURN = 3;
  FREEZE = 4;
  PARALYSIS = 5;
  TOXIC_POISON = 6;
  POISON_ANY = 7;
  FROSTBITE = 8;
  BLEED = 9;
  STATUS1_ANY = 10;
}

enum MiscMoveEffect {
  MISC_EFFECT_NONE = 0;
  MISC_EFFECT_SUPEREFFECTIVE_BOOST = 1;
  MISC_EFFECT_FAINTED_MON_BOOST = 2;
  MISC_EFFECT_ELECTRIC_TERRAIN_BOOST = 3;
  MISC_EFFECT_TOOK_DAMAGE_BOOST = 4;
  MISC_EFFECT_INCREASED_CRIT_DAMAGE = 5;
  MISC_EFFECT_IVY_CUDGEL = 6;
  MISC_EFFECT_DOUBLE_DAMAGE = 7;
  MISC_EFFECT_DOUBLE_DAMAGE_VS_BLEEDING = 8;
  MISC_EFFECT_50_PERCENT_PLUS_DAMAGE_VS_BLEEDING = 9;
  MISC_EFFECT_TRANSMUTE = 10;
  MISC_EFFECT_DOUBLE_DAMAGE_IN_FOG = 11;
}

message Argument {
  oneof argument {
    Type type = 1;
    MoveEffectArgument effect = 2;
    int32 int = 3;
    string other = 4;
    Status status = 5;
  }
}

enum Crit {
  CRIT_NORMAL = 0;
  HIGH = 1;
  ALWAYS = 2;
}

enum HitsAir {
  DOESNT_HIT_AIR = 0;
  HITS = 1;
  DOUBLE_DAMAGE = 2;
}

enum SplitFlag {
  USE_BASE_SPLIT = 0;
  USE_HIGHEST_OFFENSE = 1;
  USE_LOWEST_DEFENSE = 2;
  HITS_SPDEF = 3;
  HITS_DEF = 4;
  USE_HIGHEST_DAMAGE = 5;
}

message Move {
  MoveEnum id = 1;
  string name = 2;
  string short_name = 3;
  string description = 4;
  string short_description = 5;
  MoveEffect effect = 6;
  MoveSplit split = 7;
  SplitFlag split_modifier = 8;
  Type type = 9;
  optional Type type2 = 10;
  optional MoveTarget target = 11;
  
  int32 hit_count = 12;
  int32 power = 13;
  int32 accuracy = 14;
  int32 pp = 15;
  int32 effect_chance = 16;
  int32 priority = 17;
  Argument argument = 18;

  bool contact = 19;
  Crit crit = 20;

  bool ignores_protect = 21;
  bool ignores_stat_stages = 22;
  bool double_damage_vs_mega = 23;
  bool every_other_turn = 24;
  bool is_protection = 25;
  bool ignores_ability = 26;
  bool two_turn = 27;
  
  bool snatch_affected = 28;
  bool magic_coat_affected = 29;
  bool mirror_move_affected = 30;
  bool no_kings_rock = 31;
  bool no_sheer_force = 32;
  bool hits_underground = 33;
  bool hits_underwater = 34;
  bool powder_affected = 35;
  HitsAir hits_air = 36;
  bool ignores_levitation = 37;
  bool thaw_user = 38;
  bool ignores_substitute = 39;

  bool reckless = 40;
  bool iron_fist = 41;
  bool strong_jaw = 42;
  bool mega_launcher = 43;
  bool striker = 44;
  bool sound = 45;
  bool ballistic = 46;
  bool dance = 47;
  bool keen_edge = 48;
  bool bone = 49;
  bool weather = 50;
  bool field = 51;
  bool arrow = 52;
  bool horn = 53;
  bool air = 54;
  bool hammer = 55;
  bool throwing = 56;
  bool lunar = 57;
  
  bool no_parental_bond = 58;
  bool metronome_banned = 59;
  bool copycat_banned = 60;
  bool sleep_talk_banned = 61;
  bool mimic_banned = 62;
}